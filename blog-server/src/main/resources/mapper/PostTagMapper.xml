<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.changyue.blogserver.dao.PostTagMapper">

    <resultMap id="BaseResultMap" type="postTag">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="deleted" jdbcType="TINYINT" property="deleted"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="post_id" jdbcType="INTEGER" property="postId"/>
        <result column="tag_id" jdbcType="INTEGER" property="tagId"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, create_time, deleted, update_time, post_id, tag_id
    </sql>

    <select id="findAllByPostId" parameterType="java.lang.Integer">
        select pt.tag_id
        from post_tags pt
        where pt.post_id = #{postId}
    </select>

    <select id="listAll" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from post_tags pt
    </select>

    <delete id="deleteByTagId" parameterType="java.lang.Integer">
        delete
        from post_tags
        where tag_id = #{tagId,jdbcType=INTEGER}
    </delete>

    <select id="countPostTag" resultType="java.lang.Long">
        select COUNT(id)
        from post_tags
        where post_id = #{postId,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPostId" parameterType="java.lang.Integer">
        delete
        from post_tags
        where post_id = #{postId,jdbcType=INTEGER}
    </delete>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from post_tags
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from post_tags
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="postTag">
        insert into post_tags (create_time, deleted,
                               update_time, post_id, tag_id)
        values (#{createTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=TINYINT},
                #{updateTime,jdbcType=TIMESTAMP}, #{postId,jdbcType=INTEGER}, #{tagId,jdbcType=INTEGER})
    </insert>

    <insert id="insetInBatch">
        insert into post_tags (create_time, deleted,
        update_time, post_id, tag_id)
        values
        <foreach collection="postTags" item="postTag" index="index" separator=",">
            (#{postTag.createTime}, #{postTag.deleted},
            #{postTag.updateTime}, #{postTag.postId},
            #{postTag.tagId})
        </foreach>
    </insert>

    <insert id="insertSelective" parameterType="postTag">
        insert into post_tags
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="postId != null">
                post_id,
            </if>
            <if test="tagId != null">
                tag_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=TINYINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="postId != null">
                #{postId,jdbcType=INTEGER},
            </if>
            <if test="tagId != null">
                #{tagId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="postTag">
        update post_tags
        <set>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=TINYINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="postId != null">
                post_id = #{postId,jdbcType=INTEGER},
            </if>
            <if test="tagId != null">
                tag_id = #{tagId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="postTag">
        update post_tags
        set create_time = #{createTime,jdbcType=TIMESTAMP},
            deleted     = #{deleted,jdbcType=TINYINT},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            post_id     = #{postId,jdbcType=INTEGER},
            tag_id      = #{tagId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

</mapper>
